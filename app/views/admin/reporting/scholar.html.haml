%h2= "Scholar Report :: #{@scholar.name}"

.section
  %h2 Network of Support Analysis
  %p #{pluralize(@network_of_support.total, 'person was ', 'people were')} in #{@scholar.name}'s Network of Support
  %p #{pluralize(@network_of_support.reasons, 'person was ', 'people were')} supported by reasons
  %p Here is the breakdown:
  %table.striped-right{:style => 'width:150px;'}
    %tr
      %th{:width => 100} Family
      %td= @network_of_support.family
    %tr
      %th School
      %td= @network_of_support.school
    %tr
      %th CBO
      %td= @network_of_support.cbo
    %tr
      %th Peers
      %td= @network_of_support.peers
    %tr
      %th Others
      %td= @network_of_support.others

.section
  %h2 Asset Analysis
  #asset-analysis-chart

.section
  %h2 Asset Cluster Analysis
  #asset-cluster-analysis-chart
  %table.striped-right{:style => 'width: 600px; margin: 20px auto 0 auto;'}
    - QuestionCategory.all.each do |question_category|
      %tr
        %th{:width => 285}= question_category.name
        %td= "Questions: (#{question_category.questions.collect{|q| q.display_order}.join(',')})"

.section
  %h2 Reflective Decision Making
  #reflective-decision-making-pie-chart
  %table.striped-right{:style => 'width: 475px; margin: 20px auto;'}
    - @reflective_decision_making.each do |level|
      %tr
        %th{:width => 350}= level.name
        %td= "#{level.value}%"
  #reflective-decision-making-column-chart

:javascript
  $(function(){
    createAssetAnalysis();
    createAssetClusterAnalysis();
    createReflectiveDecisionMakingPie();
    createReflectiveDecisionMakingColumn();
  });

  function createAssetAnalysis() {
    Highcharts.setOptions({
      colors: #{@asset_analysis.collect{|q| q.color}.insert(0, '#000')}
    });

    var asset_analysis = new Highcharts.Chart({
      chart: {
        height: 1250,
        plotBackgroundColor: '#eeeeee',
        renderTo: 'asset-analysis-chart',
        spacingLeft: 25,
        spacingRight: 25,
        type: 'bar',
        width: 880
      },
      credits: {
        enabled: false
      },
      title: {
        text: 'Asset Analysis'
      },
      subtitle: {
        text: '#{escape_javascript(@scholar.name)}'
      },
      xAxis: {
        categories: #{@asset_analysis.collect{|q| q.question}},
        labels: {
          style: {
            width: '375px'
          }
        },
        title: {
          text: null,
        }
      },
      yAxis: {
        allowDecimals: false,
        min: 0,
        max: 4,
        title: {
          text: 'Level of Assets',
        }
      },
      tooltip: {
        enabled: false
      },
      legend: {
        enabled: false
      },
      plotOptions: {
        bar: {
          dataLabels: {
            enabled: true,
            style: {
              'font-weight': 'bold'
            }
          }
        },
        series: {
          colorByPoint: true
        }
      },
      series: [
        {
          data: #{@asset_analysis.collect{|q| q.response}},
          pointWidth: 20
        }
      ],
      exporting: {
        buttons: {
          exportButton: {
            menuItems: null,
            onclick: function() {
              this.exportChart();
            }
          },
          printButton: {
            enabled: false
          }
        },
        filename: '#{escape_javascript(@scholar.name.parameterize+'-asset-analysis-'+Time.now.to_i.to_s)}',
        type: 'application/pdf'
      }
    });
  }

  function createAssetClusterAnalysis() {
    Highcharts.setOptions({
      colors: #{@asset_cluster_analysis.collect{|q| q.color}.insert(0, '#000')}
    });

    var asset_analysis = new Highcharts.Chart({
      chart: {
        plotBackgroundColor: '#eeeeee',
        renderTo: 'asset-cluster-analysis-chart',
        spacingLeft: 25,
        spacingRight: 25,
        type: 'bar'
      },
      credits: {
        enabled: false
      },
      title: {
        text: 'Asset Cluster Analysis'
      },
      subtitle: {
        text: '#{escape_javascript(@scholar.name)}'
      },
      xAxis: {
        categories: #{@asset_cluster_analysis.collect{|qc| qc.category}}
      },
      yAxis: {
        allowDecimals: true,
        min: 0,
        max: 4,
        title: {
          text: 'Level of Assets',
        }
      },
      tooltip: {
        enabled: false
      },
      legend: {
        enabled: false
      },
      plotOptions: {
        bar: {
          dataLabels: {
            enabled: true,
            style: {
              'font-weight': 'bold'
            }
          }
        },
        series: {
          colorByPoint: true
        }
      },
      series: [
        {
          data: #{@asset_cluster_analysis.collect{|qc| qc.value}},
          pointWidth: 20
        }
      ],
      exporting: {
        buttons: {
          exportButton: {
            menuItems: null,
            onclick: function() {
              this.exportChart();
            }
          },
          printButton: {
            enabled: false
          }
        },
        filename: '#{escape_javascript(@scholar.name.parameterize+'-asset-cluster-analysis-'+Time.now.to_i.to_s)}',
        type: 'application/pdf'
      }
    });
  }

  function createReflectiveDecisionMakingPie() {
    Highcharts.setOptions({
      colors: #{@reflective_decision_making.collect{|r| r.color}}
    });

    var asset_analysis = new Highcharts.Chart({
      chart: {
        renderTo: 'reflective-decision-making-pie-chart',
        type: 'pie'
      },
      credits: {
        enabled: false
      },
      title: {
        text: 'Types of Statements'
      },
      subtitle: {
        text: '#{escape_javascript(@scholar.name)}'
      },
      plotOptions: {
        pie: {
          dataLabels: {
            enabled: true,
            style: {
              'font-weight': 'bold'
            }
          },
          showInLegend: true
        }
      },
      tooltip: {
        enabled: false
      },
      series: [
        {
          data: #{@reflective_decision_making.collect{|r| ["#{r.name} - #{r.value}%", r.value]}},
          name: 'Level of Reasoning',
          type: 'pie'
        }
      ],
      exporting: {
        buttons: {
          exportButton: {
            menuItems: null,
            onclick: function() {
              this.exportChart();
            }
          },
          printButton: {
            enabled: false
          }
        },
        filename: '#{escape_javascript(@scholar.name.parameterize+'-reflective-decision-making-pie-'+Time.now.to_i.to_s)}',
        type: 'application/pdf'
      }
    });
  }

  function createReflectiveDecisionMakingColumn() {
    Highcharts.setOptions({
      colors: #{@asset_cluster_analysis.collect{|q| q.color}.insert(0, '#000')}
    });

    var asset_analysis = new Highcharts.Chart({
      chart: {
        plotBackgroundColor: '#eeeeee',
        renderTo: 'reflective-decision-making-column-chart',
        type: 'column',
        width: 400
      },
      credits: {
        enabled: false
      },
      title: {
        text: 'Levels of Reflective Decision Making'
      },
      subtitle: {
        text: '#{escape_javascript(@scholar.name)}'
      },
      xAxis: {
        categories: ['Actual Score', 'Possible Score'],
        title: {
          text: null,
        }
      },
      yAxis: {
        allowDecimals: true,
        min: 0,
        title: {
          text: 'Level of Assets',
        }
      },
      tooltip: {
        enabled: false
      },
      legend: {
        enabled: false
      },
      plotOptions: {
        column: {
          dataLabels: {
            enabled: true,
            style: {
              'font-weight': 'bold'
            }
          }
        },
        series: {
          colorByPoint: true
        }
      },
      series: [
        {
          data: [#{@reflective_decision_making.collect{|r| r.level*r.tallies}.inject(:+)}, #{@reflective_decision_making.collect{|r| r.tallies}.inject(:+)*3}],
          pointWidth: 75
        }
      ],
      exporting: {
        buttons: {
          exportButton: {
            menuItems: null,
            onclick: function() {
              this.exportChart();
            }
          },
          printButton: {
            enabled: false
          }
        },
        filename: '#{escape_javascript(@scholar.name.parameterize+'-reflective-decision-making-bar-'+Time.now.to_i.to_s)}',
        type: 'application/pdf'
      }
    });
  }