/*
  http://meyerweb.com/eric/tools/css/reset/
  v2.0 | 20110126
  License: none (public domain)
*/
@mixin reset {
  html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,caption,tfoot,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;}
  article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block;}
  :focus {outline: 0;}
  body{line-height:1;}
  ol,ul{list-style:none;}
  blockquote,q{quotes:none;}
  blockquote:before,blockquote:after,
  q:before,q:after{content:'';content:none;}
  table{border-collapse:collapse;border-spacing:0;}
}

@mixin opacity($alpha) {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$alpha*100})";
  filter: alpha(opacity=$alpha*100);
  -moz-opacity: $alpha;
  -khtml-opacity: $alpha;
  opacity: $alpha;
}

@mixin shadow($value) {
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  box-shadow: $value;
}

@mixin transition($value) {
  -webkit-transition: $value;
  -moz-transition: $value;
  -o-transition: $value;
  transition: $value;
}

@mixin gradient($type, $start, $stop) {
  background: $start;
  @if $type == 'vertical' {
    background: -moz-linear-gradient(top, $start 0%, $stop 100%);
    background: -ms-linear-gradient(top, $start 0%, $stop 100%);
    background: -o-linear-gradient(top, $start 0%, $stop 100%);
    background: -webkit-gradient(linear, left top, left bottom, from($start), to($stop));
    background: -webkit-linear-gradient(top, $start 0%, $stop 100%);
    background: linear-gradient(top, $start 0%, $stop 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$startFF, endColorstr=$stopFF);
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$start}FF, endColorstr=#{$stop}FF)";
  }
  @if $type == 'horizontal' {
    background: -moz-linear-gradient(top left, $start, $stop);
    background: -ms-linear-gradient(top left, $start, $stop);
    background: -o-linear-gradient(top left, $start, $stop);
    background: -webkit-gradient(linear, left top, right top, from($start), to($stop));
    background: -webkit-linear-gradient(top left, $start, $stop);
    background: linear-gradient(top left, $start, $stop);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr=$startFF, endColorStr=$stopFF, GradientType=1);
    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$start}FF, endColorstr=#{$start}FF, GradientType=1)";
  }
}

@mixin corners($radius) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
  behavior: url('./border-radius.htc');
}

@mixin corners_individual($tl, $tr, $bl, $br) {
  -moz-border-radius-topleft: $tl;
  -moz-border-radius-topright: $tr;
  -moz-border-radius-bottomleft: $bl;
  -moz-border-radius-bottomright: $br;
  -webkit-border-radius: $tl, $tr, $bl, $br;
  border-radius: $tl, $tr, $bl, $br;
  behavior: url('./border-radius.htc');
}